  λ(a : Type)
→     let List/steppable = ./steppable a
  
  in  let Natural/recursive = ./../Natural/recursive
  
  in  Natural/recursive.cata
      (List a → Optional a)
      (   λ(i : Optional (List a → Optional a))
        → Optional/fold
          (List a → Optional a)
          i
          (List a → Optional a)
          (   λ(f : List a → Optional a)
            → λ(aa : List a)
            → merge
              { Both =
                  λ(b : { head : a, tail : List a }) → f b.tail
              , Neither =
                  λ(n : {}) → [] : Optional a
              }
              (List/steppable.project aa)
          )
          (List/head a)
      )
